stages:
  - build

variables:
  DOCKER_BUILDKIT: 1

build_alpine:on-schedule:
  stage: build
  image: docker:stable
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  parallel:
    matrix:
      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']
      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
          TARGET: ['supervisord']
          PHP_TYPE: ['cli']

  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - DOCKER_TAG=-$PHP_TYPE;
    - if [ $PHP_TYPE == "fpm" ]; then DOCKER_TAG=""; fi
    - if [ $TARGET == "supervisord" ]; then DOCKER_TAG="-supervisord"; fi

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine$DOCKER_TAG

    - docker build . --rm=false --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_$TARGET --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE

    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST
  tags:
    - cors

build_nginx:on-schedule:
  stage: build
  image: docker:stable
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  parallel:
    matrix:
        - NGINX_VERSION: [ '1.21' ]
  before_script:
    - docker info
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker build -f Dockerfile-nginx . --tag $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST --target=cors_nginx --build-arg NGINX_VERSION=$NGINX_VERSION
    - docker push $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
  tags:
    - cors

build_nginx:
  stage: build
  image: docker:stable
  only:
    refs:
      - tags
  parallel:
    matrix:
        - NGINX_VERSION: [ '1.21' ]
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker build . --rm=false --tag $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG --target=cors_nginx --build-arg NGINX_VERSION=$NGINX_VERSION
    - docker tag $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST

    - docker push $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG
    - docker push $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
  tags:
    - cors

build_alpine:
  stage: build
  image: docker:stable
  only:
    refs:
      - tags
  parallel:
    matrix:
      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']
      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
          TARGET: ['supervisord']
          PHP_TYPE: ['cli']
  variables:
    TAG: $CI_COMMIT_REF_NAME
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - DOCKER_TAG=-$PHP_TYPE;
    - if [ $PHP_TYPE == "fpm" ]; then DOCKER_TAG=""; fi
    - if [ $TARGET == "supervisord" ]; then DOCKER_TAG="-supervisord"; fi

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine$DOCKER_TAG

    - docker build . --tag $IMAGE_NAME:$PHP_VERSION-$TAG --target=cors_$TARGET --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE
    - docker tag $IMAGE_NAME:$PHP_VERSION-$TAG $CI_REGISTRY_IMAGE/php-alpine$DOCKER_TAG:$PHP_VERSION-LATEST

    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST
  tags:
    - cors
