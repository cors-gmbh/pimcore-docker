stages:
  - build_php
  - build_php_debug
  - build_php_blackfire
  - build_supervisord
  - build_supervisord_debug
  - build_nginx
  - build_varnish
  - manifest_php
  - manifest_php_debug
  - manifest_php_blackfire
  - manifest_supervisord
  - manifest_supervisord_debug
  - manifest_nginx
  - manifest_varnish
  - release_php
  - release_php_debug
  - release_php_blackfire
  - release_supervisord
  - release_supervisord_debug
  - release_nginx
  - release_varnish
  - release_manifest_php
  - release_manifest_php_debug
  - release_manifest_php_blackfire
  - release_manifest_supervisord
  - release_manifest_supervisord_debug
  - release_manifest_nginx
  - scan_php
  - scan_php_debug
  - scan_php_blackfire
  - scan_supervisord
  - scan_supervisord_debug
  - scan_nginx
  - scan_varnish

.build:
  image: docker:stable
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  tags:
    - cors

.manifest:
  extends: .build
  image: docker:stable
  variables:
    - IMAGE_NAME_ARM
    - IMAGE_NAME_AMD
    - IMAGE_NAME
  script:
    - CI_MANIFEST_LIST="$IMAGE_NAME_AMD $IMAGE_NAME_ARM"

    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker manifest create --amend $IMAGE_NAME $CI_MANIFEST_LIST && docker manifest push $IMAGE_NAME

.manifest_release:
  extends: .manifest
  variables:
    - IMAGE_NAME_ARM
    - IMAGE_NAME_ARM_TAG
    - IMAGE_NAME_AMD
    - IMAGE_NAME_AMD_TAG
    - IMAGE_NAME
    - IMAGE_NAME_TAG
  script:
    - CI_MANIFEST_LIST="$IMAGE_NAME_AMD $IMAGE_NAME_ARM"
    - CI_MANIFEST_LIST_TAG="$IMAGE_NAME_AMD_TAG $IMAGE_NAME_ARM_TAG"

    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker manifest create --amend $IMAGE_NAME $CI_MANIFEST_LIST && docker manifest push $IMAGE_NAME
    - docker manifest create --amend $IMAGE_NAME_TAG $CI_MANIFEST_LIST_TAG && docker manifest push $IMAGE_NAME_TAG

.build_php:
  extends: .build
  parallel:
    matrix:
      -   ARCH: ['amd', 'arm']
          PHP_VERSION: [ '8.0', '8.1' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']
  tags:
    - cors-${ARCH}

.build_php_debug:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]
  tags:
    - cors-${ARCH}

.build_php_blackfire:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1' ]
  tags:
    - cors-${ARCH}

.build_supervisord:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1' ]
  tags:
    - cors-${ARCH}

.build_supervisord_debug:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1' ]
  tags:
    - cors-${ARCH}

.build_nginx:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        NGINX_VERSION: [ '1.21', '1.22' ]
  tags:
    - cors-${ARCH}

.scan:
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [ "" ]
  variables:
    GIT_STRATEGY: none
    TRIVY_USERNAME: "$CI_REGISTRY_USER"
    TRIVY_PASSWORD: "$CI_REGISTRY_PASSWORD"
    TRIVY_AUTH_URL: "$CI_REGISTRY"
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
  allow_failure: true
  before_script:
    - echo "scan image"
  after_script:
    - echo "scan complete"
  script:
    - trivy --version
    # cache cleanup is needed when scanning images with the same tags, it does not remove the database
    - time trivy image --clear-cache
    # update vulnerabilities db
    - time trivy image --download-db-only
    # Builds report and puts it in the default workdir $CI_PROJECT_DIR, so `artifacts:` can take it from there
    - time trivy image --exit-code 0 --format template --template "@/contrib/gitlab.tpl"
      --output "$CI_PROJECT_DIR/gl-container-scanning-report.json" "$FULL_IMAGE_NAME"
    # Prints full report
    - time trivy image --exit-code 0 "$FULL_IMAGE_NAME"
    # Fail on critical vulnerabilities
    - time trivy image --exit-code 1 --severity CRITICAL "$FULL_IMAGE_NAME"
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json
  tags:
    - cors

build_php:
  extends: .build_php
  stage: build_php
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE
    - docker build --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_php_$PHP_TYPE --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE .
    - docker push "$IMAGE_NAME:$PHP_VERSION-LATEST"

scan_php:
  stage: scan_php
  needs:
    - manifest_php
  except:
    - tags
  extends:
    - .build_php
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST

build_php_debug:
  extends: .build_php_debug
  stage: build_php_debug
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE-debug

    - docker build -f Dockerfile-debug --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION .
    - docker push "$IMAGE_NAME:$PHP_VERSION-LATEST"

scan_php_debug:
  stage: scan_php_debug
  needs:
    - manifest_php_debug
  except:
    - tags
  extends:
    - .build_php_debug
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST

build_php_blackfire:
  extends: .build_php_blackfire
  stage: build_php_blackfire
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-fpm:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-fpm-blackfire

    - docker build -f Dockerfile-blackfire --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION .
    - docker push "$IMAGE_NAME:$PHP_VERSION-LATEST"

scan_php_blackfire:
  stage: scan_php_blackfire
  needs:
    - manifest_php_blackfire
  except:
    - tags
  extends:
    - .build_php_blackfire
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST

build_supervisord:
  extends: .build_supervisord
  stage: build_supervisord
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-cli:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-supervisord

    - docker build -f Dockerfile-supervisord --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME .
    - docker push "$IMAGE_NAME:$PHP_VERSION-LATEST"

scan_supervisord:
  stage: scan_supervisord
  needs:
    - manifest_supervisord
  except:
    - tags
  extends:
    - .build_supervisord
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-LATEST

build_supervisord_debug:
  extends: .build_supervisord_debug
  stage: build_supervisord_debug
  except:
    - tags
  needs:
    - build_supervisord
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-supervisord:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-supervisord-debug

    - docker build -f Dockerfile-supervisord --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME .
    - docker push "$IMAGE_NAME:$PHP_VERSION-LATEST"

scan_supervisord_debug:
  stage: scan_supervisord_debug
  needs:
    - manifest_supervisord_debug
  except:
    - tags
  extends:
    - .build_supervisord_debug
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord-debug:$PHP_VERSION-LATEST

build_nginx:
  extends: .build_nginx
  stage: build_nginx
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/nginx
    - docker build -f Dockerfile-nginx --tag $IMAGE_NAME:$NGINX_VERSION-LATEST .
    - docker push "$IMAGE_NAME:$NGINX_VERSION-LATEST"

scan_nginx:
  stage: scan_nginx
  needs:
    - manifest_nginx
  except:
    - tags
  extends:
    - .build_nginx
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST

build_varnish:
  extends: .build
  stage: build_varnish
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/varnish
    - docker build -f Dockerfile-varnish --tag $IMAGE_NAME:LATEST .
    - docker push "$IMAGE_NAME:LATEST"

scan_varnish:
  stage: scan_varnish
  needs:
    - build_varnish
  except:
    - tags
  extends:
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/varnish:LATEST

manifest_php:
  extends:
    - .manifest
    - .build_php
  stage: manifest_php
  needs:
   - build_php
  except:
    - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_php_debug:
  extends:
    - .manifest
    - .build_php_debug
  stage: manifest_php_debug
  needs:
    - build_php_debug
  except:
    - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_php_blackfire:
  extends:
    - .manifest
    - .build_php_blackfire
  stage: manifest_php_blackfire
  needs:
    - build_php_blackfire
  except:
    - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_supervisord:
  extends:
    - .manifest
    - .build_supervisord
  stage: manifest_supervisord
  needs:
    - build_supervisord
  except:
    - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-supervisord:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_supervisord_debug:
  extends:
    - .manifest
    - .build_supervisord_debug
  stage: manifest_supervisord_debug
  needs:
    - build_supervisord_debug
  except:
    - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-supervisord-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-supervisord-debug:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_nginx:
  extends:
    - .manifest
    - .build_nginx
  stage: manifest_nginx
  needs:
    - build_nginx
  except:
    - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/nginx:$NGINX_VERSION-LATEST
  tags:
    - cors

release_php:
  extends: .build_php
  stage: release_php
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE
    - docker build --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --target=cors_php_$PHP_TYPE --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE .
    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST

release_php_debug:
  extends: .build_php_debug
  stage: release_php_debug
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug

    - docker build -f Dockerfile-debug --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION .
    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST

release_php_blackfire:
  extends: .build_php_blackfire
  stage: release_php_blackfire
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-fpm:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire

    - docker build -f Dockerfile-blackfire --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION .
    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST

release_supervisord:
  extends: .build_supervisord
  stage: release_supervisord
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-cli:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord

    - docker build -f Dockerfile-supervisord --tag $IMAGE_NAME:$PHP_VERSION-$TAG --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME .
    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST

release_supervisord_debug:
  extends: .build_supervisord_debug
  stage: release_supervisord_debug
  only:
    refs:
      - tags
  needs:
    - release_supervisord
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/php-alpine-supervisord:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord-debug

    - docker build -f Dockerfile-supervisord --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME .
    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST

release_nginx:
  extends: .build_nginx
  stage: release_nginx
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH/nginx
    - docker build -f Dockerfile-nginx --tag $IMAGE_NAME:$NGINX_VERSION-LATEST --tag $IMAGE_NAME:$NGINX_VERSION-$TAG .

    - docker push $IMAGE_NAME:$NGINX_VERSION-$TAG
    - docker push $IMAGE_NAME:$NGINX_VERSION-LATEST

release_varnish:
  extends: .build
  stage: release_varnish
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/varnish
    - docker build -f Dockerfile-varnish --tag $IMAGE_NAME:LATEST --tag $IMAGE_NAME:$TAG .
    - docker push $IMAGE_NAME:LATEST
    - docker push $IMAGE_NAME:$TAG

release_manifest_php:
  extends:
    - .manifest_release
    - .build_php
  stage: release_manifest_php
  needs:
    - release_php
  only:
    refs:
      - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/$ARCH/php-alpine-$PHP_TYPE:$PHP_VERSION-$TAG
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD_TAG: $CI_REGISTRY_IMAGE/amd/php-alpine-$PHP_TYPE:$PHP_VERSION-$TAG
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM_TAG: $CI_REGISTRY_IMAGE/arm/php-alpine-$PHP_TYPE:$PHP_VERSION-$TAG

release_manifest_php_debug:
  extends:
    - .manifest_release
    - .build_php_debug
  stage: release_manifest_php_debug
  needs:
    - release_php_debug
  only:
    refs:
      - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-$TAG
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD_TAG: $CI_REGISTRY_IMAGE/amd/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-$TAG
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM_TAG: $CI_REGISTRY_IMAGE/arm/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-$TAG

release_manifest_php_blackfire:
  extends:
    - .manifest_release
    - .build_php_blackfire
  stage: release_manifest_php_blackfire
  needs:
    - release_php_blackfire
  only:
    refs:
      - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire:$PHP_VERSION-$TAG
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD_TAG: $CI_REGISTRY_IMAGE/amd/php-alpine-fpm-blackfire:$PHP_VERSION-$TAG
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM_TAG: $CI_REGISTRY_IMAGE/arm/php-alpine-fpm-blackfire:$PHP_VERSION-$TAG

release_manifest_supervisord:
  extends:
    - .manifest_release
    - .build_supervisord
  stage: release_manifest_supervisord
  needs:
    - release_supervisord
  only:
    refs:
      - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-$TAG
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD_TAG: $CI_REGISTRY_IMAGE/amd/php-alpine-supervisord:$PHP_VERSION-$TAG
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM_TAG: $CI_REGISTRY_IMAGE/arm/php-alpine-supervisord:$PHP_VERSION-$TAG

release_manifest_supervisord_debug:
  extends:
    - .manifest_release
    - .build_supervisord_debug
  stage: release_manifest_supervisord_debug
  needs:
    - release_supervisord_debug
  only:
    refs:
      - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-supervisord-debug:$PHP_VERSION-$TAG
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/php-alpine-supervisord-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_AMD_TAG: $CI_REGISTRY_IMAGE/amd/php-alpine-supervisord-debug:$PHP_VERSION-$TAG
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/php-alpine-supervisord-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_ARM_TAG: $CI_REGISTRY_IMAGE/arm/php-alpine-supervisord-debug:$PHP_VERSION-$TAG

release_manifest_nginx:
  extends:
    - .manifest_release
    - .build_nginx
  stage: release_manifest_nginx
  needs:
    - release_nginx
  only:
    refs:
      - tags
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG
    IMAGE_NAME_AMD: $CI_REGISTRY_IMAGE/amd/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_AMD_TAG: $CI_REGISTRY_IMAGE/amd/nginx:$NGINX_VERSION-$TAG
    IMAGE_NAME_ARM: $CI_REGISTRY_IMAGE/arm/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_ARM_TAG: $CI_REGISTRY_IMAGE/arm/nginx:$NGINX_VERSION-$TAG
