stages:
  - build_php
  - build_php_debug
  - build_php_blackfire
  - build_supervisord
  - build_nginx
  - build_varnish
  - manifest_php
  - manifest_php_debug
  - manifest_php_blackfire
  - manifest_supervisord
  - manifest_nginx
  - manifest_varnish
  - release_php
  - release_php_debug
  - release_php_blackfire
  - release_supervisord
  - release_nginx
  - release_varnish
  - release_manifest_php
  - release_manifest_php_debug
  - release_manifest_php_blackfire
  - release_manifest_supervisord
  - release_manifest_nginx

variables:
  GCP_URL: europe-west3-docker.pkg.dev
  GCP_REGISTRY_IMAGE: $GCP_URL/cors-wolke/$CI_PROJECT_PATH
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375

.build_kaniko:
  image:
    name: gcr.io/kaniko-project/executor:v1.12.1-debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64 | tr -d '\n')\"}, \"$GCP_URL\":{\"auth\":\"$(echo -n ${GOOGLE_ARTIFACT_REGISTRY} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

.build:
  services:
    - name: docker:dind
      command: ["--mtu=1450"]
  image: docker:stable
  before_script:
    - until docker info; do sleep 1; done
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - base64 -d $GOOGLE_ARTIFACT_REGISTRY | docker login -u _json_key --password-stdin https://$GCP_URL
  tags:
    - cors

.manifest:
  extends: .build
  image:
    name: mplatform/manifest-tool:alpine
  variables:
    - TEMPLATE
    - IMAGE_NAME
    - IMAGE_NAME_GC
  script:
    - >-
      manifest-tool --docker-cfg=/kaniko/.docker/config.json push from-args
        --platforms linux/amd64,linux/arm64
        --template $TEMPLATE
        --target ${IMAGE_NAME}

    - >-
      manifest-tool --docker-cfg=/kaniko/.docker/config.json push from-args
        --platforms linux/amd64,linux/arm64
        --template $TEMPLATE
        --target ${IMAGE_NAME_GCP}

.manifest_release:
  extends: .manifest
  variables:
    - TEMPLATE
    - IMAGE_NAME
    - IMAGE_NAME_GCP
  script:
    - >-
      manifest-tool --docker-cfg=/kaniko/.docker/config.json push from-args
        --platforms linux/amd64,linux/arm64
        --template $TEMPLATE
        --target ${IMAGE_NAME}
        --tags $CI_COMMIT_REF_NAME

    - >-
      manifest-tool --docker-cfg=/kaniko/.docker/config.json push from-args
        --platforms linux/amd64,linux/arm64
        --template $TEMPLATE
        --target ${IMAGE_NAME_GCP}
        --tags $CI_COMMIT_REF_NAME

.build_php:
  extends: .build
  parallel:
    matrix:
      -   ARCH: ['amd', 'arm']
          PHP_VERSION: [ '8.0', '8.1', '8.2' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']
          ALPINE: [ '3.16' ]
      -   ARCH: [ 'amd', 'arm' ]
          PHP_VERSION: [ '8.1', '8.2' ]
          TARGET: [ 'php' ]
          PHP_TYPE: [ 'fpm', 'cli' ]
          ALPINE: [ '3.17', '3.18' ]
  tags:
    - cors-${ARCH}

.manifest_php:
  extends: .build
  parallel:
    matrix:
      -   PHP_VERSION: [ '8.0', '8.1', '8.2' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']
          ALPINE: [ '3.16' ]
      -   PHP_VERSION: [ '8.1', '8.2' ]
          TARGET: [ 'php' ]
          PHP_TYPE: [ 'fpm', 'cli' ]
          ALPINE: [ '3.17', '3.18' ]

.build_php_debug:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1', '8.2' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]
        ALPINE: [ '3.16' ]
      - ARCH: [ 'amd', 'arm' ]
        PHP_VERSION: [ '8.1', '8.2' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]
        ALPINE: [ '3.17', '3.18' ]
  tags:
    - cors-${ARCH}

.manifest_php_debug:
  extends: .build
  parallel:
    matrix:
      - PHP_VERSION: [ '8.0', '8.1', '8.2' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]
        ALPINE: [ '3.16' ]
      - PHP_VERSION: [ '8.1', '8.2' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]
        ALPINE: [ '3.17', '3.18' ]

.build_php_blackfire:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1', '8.2' ]
        ALPINE: [ '3.16' ]
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.1', '8.2' ]
        ALPINE: [ '3.17', '3.18' ]
  tags:
    - cors-${ARCH}

.manifest_php_blackfire:
  extends: .build
  parallel:
    matrix:
      - PHP_VERSION: [ '8.0', '8.1', '8.2' ]
        ALPINE: [ '3.16' ]
      - PHP_VERSION: [ '8.1', '8.2' ]
        ALPINE: [ '3.17', '3.18' ]

.build_supervisord:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.0', '8.1', '8.2' ]
        ALPINE: [ '3.16' ]
      - ARCH: ['amd', 'arm']
        PHP_VERSION: [ '8.1', '8.2' ]
        ALPINE: [ '3.17', '3.18' ]
  tags:
    - cors-${ARCH}

.manifest_supervisord:
  extends: .build
  parallel:
    matrix:
      - PHP_VERSION: [ '8.0', '8.1', '8.2' ]
        ALPINE: [ '3.16' ]
      - PHP_VERSION: [ '8.1', '8.2' ]
        ALPINE: [ '3.17', '3.18' ]

.build_nginx:
  extends: .build
  parallel:
    matrix:
      - ARCH: ['amd', 'arm']
        NGINX_VERSION: [ '1.21', '1.22' ]
  tags:
    - cors-${ARCH}

.manifest_nginx:
  extends: .build
  parallel:
    matrix:
      - NGINX_VERSION: [ '1.21', '1.22' ]

build_php:
  extends: .build_php
  stage: build_php
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE

    - /kaniko/executor
        --context $CI_PROJECT_DIR
        --cache true
        --dockerfile "Dockerfile"
        --target=cors_php_$PHP_TYPE 
        --build-arg PHP_VERSION=$PHP_VERSION 
        --build-arg PHP_TYPE=$PHP_TYPE
        --build-arg ALPINE_VERSION=$ALPINE
        --destination $IMAGE_NAME:$PHP_VERSION-LATEST 
        --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST

build_php_debug:
  extends: .build_php_debug
  stage: build_php_debug
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE-debug
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE-debug

    - /kaniko/executor
        --context $CI_PROJECT_DIR
        --cache true
        --dockerfile "Dockerfile-debug"
        --target=cors_php_$PHP_TYPE
        --build-arg FROM=$FROM_IMAGE_NAME 
        --build-arg PHP_VERSION=$PHP_VERSION  
        --build-arg ALPINE_VERSION=$ALPINE
        --destination $IMAGE_NAME:$PHP_VERSION-LATEST
        --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST

build_php_blackfire:
  extends: .build_php_blackfire
  stage: build_php_blackfire
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-fpm:$PHP_VERSION-LATEST

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-fpm-blackfire
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-fpm-blackfire

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-blackfire"
      --target=cors_php_$PHP_TYPE
      --build-arg FROM=$FROM_IMAGE_NAME
      --build-arg PHP_VERSION=$PHP_VERSION
      --build-arg ALPINE_VERSION=$ALPINE
      --destination $IMAGE_NAME:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST

build_supervisord:
  extends: .build_supervisord
  stage: build_supervisord
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-cli:$PHP_VERSION-LATEST

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-supervisord
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-supervisord

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-supervisord"
      --target=cors_php_$PHP_TYPE
      --build-arg FROM=$FROM_IMAGE_NAME
      --build-arg PHP_VERSION=$PHP_VERSION
      --build-arg ALPINE_VERSION=$ALPINE
      --destination $IMAGE_NAME:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST

build_nginx:
  extends: .build_nginx
  stage: build_nginx
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/nginx
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/nginx

    - docker pull $IMAGE_NAME:$NGINX_VERSION-LATEST || true
    - docker build --cache-from $IMAGE_NAME:$NGINX_VERSION-LATEST -f Dockerfile-nginx --tag $IMAGE_NAME:$NGINX_VERSION-LATEST --tag $IMAGE_NAME_GCP:$NGINX_VERSION-LATEST .
    - docker push "$IMAGE_NAME:$NGINX_VERSION-LATEST"
    - docker push "$IMAGE_NAME_GCP:$NGINX_VERSION-LATEST"

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-nginx"
      --destination $IMAGE_NAME:$NGINX_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$NGINX_VERSION-LATEST

build_varnish:
  extends: .build
  stage: build_varnish
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/varnish
    - IMAGE_NAME_GCP=$CI_REGISTRY_IMAGE/varnish

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-varnish"
      --destination $IMAGE_NAME:LATEST
      --destination $IMAGE_NAME_GCP:LATEST

manifest_php:
  extends:
    - .manifest
    - .manifest_php
  stage: manifest_php
  needs:
    - build_php
  except:
    - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_php_debug:
  extends:
    - .manifest
    - .manifest_php_debug
  stage: manifest_php_debug
  needs:
    - build_php_debug
  except:
    - tags
  variables:
    TEMAPLTE: $GCP_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_php_blackfire:
  extends:
    - .manifest
    - .manifest_php_blackfire
  stage: manifest_php_blackfire
  needs:
    - build_php_blackfire
  except:
    - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_supervisord:
  extends:
    - .manifest
    - .manifest_supervisord
  stage: manifest_supervisord
  needs:
    - build_supervisord
  except:
    - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-supervisord:$PHP_VERSION-LATEST
  tags:
    - cors

manifest_nginx:
  extends:
    - .manifest
    - .manifest_nginx
  stage: manifest_nginx
  needs:
    - build_nginx
  except:
    - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
  tags:
    - cors

release_php:
  extends: .build_php
  stage: release_php
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile"
      --target=cors_php_$PHP_TYPE
      --build-arg FROM=$FROM_IMAGE_NAME
      --build-arg PHP_VERSION=$PHP_VERSION
      --build-arg ALPINE_VERSION=$ALPINE
      --destination $IMAGE_NAME:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME:$PHP_VERSION-$TAG
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-$TAG


release_php_debug:
  extends: .build_php_debug
  stage: release_php_debug
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE-debug
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-$PHP_TYPE-debug

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-debug"
      --target=cors_php_$PHP_TYPE
      --build-arg FROM=$FROM_IMAGE_NAME
      --build-arg PHP_VERSION=$PHP_VERSION
      --build-arg ALPINE_VERSION=$ALPINE
      --destination $IMAGE_NAME:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME:$PHP_VERSION-$TAG
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-$TAG

release_php_blackfire:
  extends: .build_php_blackfire
  stage: release_php_blackfire
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-fpm:$PHP_VERSION-LATEST

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-fpm-blackfire
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-fpm-blackfire

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-blackfire"
      --target=cors_php_$PHP_TYPE
      --build-arg FROM=$FROM_IMAGE_NAME
      --build-arg PHP_VERSION=$PHP_VERSION
      --build-arg ALPINE_VERSION=$ALPINE
      --destination $IMAGE_NAME:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME:$PHP_VERSION-$TAG
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-$TAG

release_supervisord:
  extends: .build_supervisord
  stage: release_supervisord
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-cli:$PHP_VERSION-LATEST

    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-supervisord
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/php-alpine-$ALPINE-supervisord

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-sueprvisord"
      --target=cors_php_$PHP_TYPE
      --build-arg FROM=$FROM_IMAGE_NAME
      --build-arg PHP_VERSION=$PHP_VERSION
      --build-arg ALPINE_VERSION=$ALPINE
      --destination $IMAGE_NAME:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME:$PHP_VERSION-$TAG
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$PHP_VERSION-$TAG

release_nginx:
  extends: .build_nginx
  stage: release_nginx
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/$ARCH64/nginx
    - IMAGE_NAME_GCP=$GCP_REGISTRY_IMAGE/$ARCH64/nginx

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-nginx"
      --destination $IMAGE_NAME:$NGINX_VERSION-$TAG
      --destination $IMAGE_NAME:$NGINX_VERSION-LATEST
      --destination $IMAGE_NAME_GCP:$NGINX_VERSION-$TAG
      --destination $IMAGE_NAME_GCP:$NGINX_VERSION-LATEST

release_varnish:
  extends: .build
  stage: release_varnish
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/varnish
    - IMAGE_NAME_GCP=$CI_REGISTRY_IMAGE/varnish

    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --cache true
      --dockerfile "Dockerfile-varnish"
      --destination $IMAGE_NAME:LATEST
      --destination $IMAGE_NAME:$TAG
      --destination $IMAGE_NAME_GCP:LATEST
      --destination $IMAGE_NAME_GCP:$TAG

release_manifest_php:
  extends:
    - .manifest_release
    - .manifest_php
  stage: release_manifest_php
  needs:
    - release_php
  only:
    refs:
      - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE:$PHP_VERSION-LATEST
  tags:
    - cors

release_manifest_php_debug:
  extends:
    - .manifest_release
    - .manifest_php_debug
  stage: release_manifest_php_debug
  needs:
    - release_php_debug
  only:
    refs:
      - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-$CI_COMMIT_REF_NAME
    IMAGE_NAME_TAG_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-$PHP_TYPE-debug:$PHP_VERSION-$CI_COMMIT_REF_NAME
  tags:
    - cors

release_manifest_php_blackfire:
  extends:
    - .manifest_release
    - .manifest_php_blackfire
  stage: release_manifest_php_blackfire
  needs:
    - release_php_blackfire
  only:
    refs:
      - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-$CI_COMMIT_REF_NAME
    IMAGE_NAME_TAG_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-fpm-blackfire:$PHP_VERSION-$CI_COMMIT_REF_NAME
  tags:
    - cors

release_manifest_supervisord:
  extends:
    - .manifest_release
    - .manifest_supervisord
  stage: release_manifest_supervisord
  needs:
    - release_supervisord
  only:
    refs:
      - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/php-alpine-$ALPINE-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-supervisord:$PHP_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/php-alpine-$ALPINE-supervisord:$PHP_VERSION-$CI_COMMIT_REF_NAME
    IMAGE_NAME_TAG_GCP: $GCP_REGISTRY_IMAGE/php-alpine-$ALPINE-supervisord:$PHP_VERSION-$CI_COMMIT_REF_NAME
  tags:
    - cors

release_manifest_nginx:
  extends:
    - .manifest_release
    - .manifest_nginx
  stage: release_manifest_nginx
  needs:
    - release_nginx
  only:
    refs:
      - tags
  variables:
    TEMPLATE: $CI_REGISTRY_IMAGE/ARCH/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_GCP: $GCP_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
    IMAGE_NAME_TAG: $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$CI_COMMIT_REF_NAME
    IMAGE_NAME_TAG_GCP: $GCP_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$CI_COMMIT_REF_NAME
  tags:
    - cors
