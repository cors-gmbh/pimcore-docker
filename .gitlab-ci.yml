stages:
  - build_php
  - build_php_debug
  - build_php_blackfire
  - build_supervisord
  - build_supervisord_debug
  - build_nginx
  - build_varnish
  - release_php
  - release_php_debug
  - release_php_blackfire
  - release_supervisord
  - release_supervisord_debug
  - release_nginx
  - release_varnish
  - scan_php
  - scan_php_debug
  - scan_php_blackfire
  - scan_supervisord
  - scan_supervisord_debug
  - scan_nginx
  - scan_varnish

variables:
  DOCKER_BUILDKIT: 1
  DOCKER_DRIVER: overlay2
  CI_BUILDX_ARCHS: "linux/amd64"

.buildx:
  stage: build_php
  image: registry.gitlab.com/ericvh/docker-buildx-qemu
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - update-binfmts --enable
    - docker buildx create --driver docker-container --use
    - docker buildx inspect --bootstrap
    - docker buildx ls
  after_script:
    - docker buildx rm
  tags:
    - cors

.buildx_php:
  extends: .buildx
  parallel:
    matrix:
      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']

.buildx_php_debug:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]

.buildx_php_blackfire:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]

.buildx_supervisord:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]

.buildx_supervisord_debug:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]

.build_nginx:
  extends: .buildx
  parallel:
    matrix:
      - NGINX_VERSION: [ '1.21' ]

.scan:
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [ "" ]
  script:
    - trivy --version
    # cache cleanup is needed when scanning images with the same tags, it does not remove the database
    - time trivy image --clear-cache
    # update vulnerabilities db
    - time trivy image --download-db-only
    # Prints full report
    - time trivy image --exit-code 0 "$FULL_IMAGE_NAME"
    # Fail on critical vulnerabilities
    - time trivy image --exit-code 1 --severity CRITICAL "$FULL_IMAGE_NAME"
  cache:
    paths:
      - .trivycache/
  tags:
    - cors

build_php:
  extends: .buildx_php
  stage: build_php
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE
    - docker buildx build --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_php_$PHP_TYPE --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE --push --platform $CI_BUILDX_ARCHS .

scan_php:
  stage: scan_php
  needs:
    - build_php
  extends:
    - .scan
    - .buildx_php
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST

build_php_debug:
  extends: .buildx_php_debug
  stage: build_php_debug
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug

    - docker buildx build -f Dockerfile-debug --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

scan_php_debug:
  stage: scan_php_debug
  needs:
    - build_php_debug
  extends:
    - .scan
    - .buildx_php_debug
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug:$PHP_VERSION-LATEST

build_blackfire:
  extends: .buildx_php_blackfire
  stage: build_php_blackfire
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-fpm:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire

    - docker buildx build -f Dockerfile-blackfire --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

scan_blackfire:
  stage: scan_blackfire
  needs:
    - build_blackfire
  extends:
    - .scan
    - .buildx_php_blackfire
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire:$PHP_VERSION-LATEST

build_supervisord:
  extends: .buildx_supervisord
  stage: build_supervisord
  except:
    - tags
  needs:
    - build_php
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-cli:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord

    - docker buildx build -f Dockerfile-supervisord --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME --push --platform $CI_BUILDX_ARCHS .

scan_supervisord:
  stage: scan_supervisord
  needs:
    - build_supervisord
  extends:
    - .scan
    - .buildx_supervisord
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-LATEST

build_supervisord_debug:
  extends: .buildx_supervisord_debug
  stage: build_supervisord_debug
  except:
    - tags
  needs:
    - build_supervisord
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord-debug

    - docker buildx build -f Dockerfile-supervisord --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --build-arg FROM=$FROM_IMAGE_NAME --push --platform $CI_BUILDX_ARCHS .

scan_supervisord_debug:
  stage: scan_supervisord_debug
  needs:
    - build_supervisord_debug
  extends:
    - .scan
    - .buildx_supervisord_debug
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/php-alpine-supervisord-debug:$PHP_VERSION-LATEST

build_nginx:
  extends: .build_nginx
  stage: build_nginx
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/nginx
    - docker buildx build -f Dockerfile-nginx --pull --cache-from type=registry,ref=$IMAGE_NAME:$NGINX_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$NGINX_VERSION-cache,mode=max --tag $IMAGE_NAME:$NGINX_VERSION-LATEST --push --platform $CI_BUILDX_ARCHS .

scan_nginx:
  stage: scan_nginx
  needs:
    - build_nginx
  extends:
    - .scan
    - .build_nginx
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST

build_varnish:
  extends: .buildx
  stage: build_varnish
  except:
    - tags
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/varnish
    - docker buildx build -f Dockerfile-varnish --pull --cache-from type=registry,ref=$IMAGE_NAME:cache --cache-to type=registry,ref=$IMAGE_NAME:cache,mode=max --tag $IMAGE_NAME:LATEST --push --platform $CI_BUILDX_ARCHS .

scan_varnish:
  stage: scan_varnish
  needs:
    - build_varnish
  extends:
    - .scan
  variables:
    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE/varnish:LATEST

release_php:
  extends: .buildx_php
  stage: release_php
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE
    - docker buildx build --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --target=cors_php_$PHP_TYPE --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE --push --platform $CI_BUILDX_ARCHS .

release_debug:
  extends: .buildx_php_debug
  stage: release_php_debug
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE-debug

    - docker buildx build -f Dockerfile-debug --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

release_blackfire:
  extends: .buildx_php_blackfire
  stage: release_php_blackfire
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-fpm:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-fpm-blackfire

    - docker buildx build -f Dockerfile-blackfire --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

release_supervisord:
  extends: .buildx_supervisord
  stage: release_supervisord
  only:
    refs:
      - tags
  needs:
    - release_php
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-cli:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord

    - docker buildx build -f Dockerfile-supervisord --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME --push --platform $CI_BUILDX_ARCHS .

release_supervisord_debug:
  extends: .buildx_supervisord_debug
  stage: release_supervisord_debug
  only:
    refs:
      - tags
  needs:
    - release_supervisord
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord:$PHP_VERSION-LATEST
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-supervisord-debug

    - docker buildx build -f Dockerfile-supervisord --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --tag $IMAGE_NAME:$PHP_VERSION-$TAG --build-arg FROM=$FROM_IMAGE_NAME --push --platform $CI_BUILDX_ARCHS .

release_nginx:
  extends: .buildx
  stage: release_nginx
  only:
    refs:
      - tags
  parallel:
    matrix:
      - NGINX_VERSION: [ '1.21' ]
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/nginx
    - docker buildx build -f Dockerfile-nginx --pull --cache-from type=registry,ref=$IMAGE_NAME:$NGINX_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$NGINX_VERSION-cache,mode=max --tag $IMAGE_NAME:$NGINX_VERSION-LATEST --tag $IMAGE_NAME:$NGINX_VERSION-$TAG --push --platform $CI_BUILDX_ARCHS .

release_varnish:
  extends: .buildx
  stage: release_varnish
  only:
    refs:
      - tags
  variables:
    TAG: $CI_COMMIT_REF_NAME
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/varnish
    - docker buildx build -f Dockerfile-varnish --pull --cache-from type=registry,ref=$IMAGE_NAME:cache --cache-to type=registry,ref=$IMAGE_NAME:cache,mode=max --tag $IMAGE_NAME:LATEST --tag $IMAGE_NAME:$TAG --push --platform $CI_BUILDX_ARCHS .
