stages:
  - build
  - build_debug
  - build_supervisord
  - build_supervisord_debug
  - build_nginx

variables:
  DOCKER_BUILDKIT: 1
  DOCKER_DRIVER: overlay2
  CI_BUILDX_ARCHS: "linux/amd64"

.buildx:
  stage: build
  image: registry.gitlab.com/ericvh/docker-buildx-qemu
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - update-binfmts --enable
    - docker buildx create --driver docker-container --use
    - docker buildx inspect --bootstrap
    - docker buildx ls
  tags:
    - cors

.buildx_debug:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]
        PHP_TYPE: [ 'fpm', 'cli' ]
        TARGET: [ 'debug' ]
  script:
    - DOCKER_TAG=-$PHP_TYPE;
    - if [ $PHP_TYPE == "fpm" ]; then DOCKER_TAG=""; fi

    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine$DOCKER_TAG:$PHP_VERSION-LATEST
    - IMAGE_NAME=$FROM_IMAGE_NAME-debug

    - docker buildx build -f Dockerfile-debug --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_$TARGET --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

.buildx_supervisord:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]
        PHP_TYPE: [ 'cli' ]
        TARGET: [ 'supervisord' ]
  script:
    - if [ $TARGET == "supervisord" ]; then DOCKER_TAG="-supervisord"; fi

    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-cli
    - IMAGE_NAME=$FROM_IMAGE_NAME-debug

    - docker buildx build -f Dockerfile-supervisord --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_$TARGET --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

.buildx_supervisord_debug:
  extends: .buildx
  parallel:
    matrix:
      - PHP_VERSION: [ '7.4', '8.0', '8.1' ]
        PHP_TYPE: [ 'cli' ]
        TARGET: [ 'supervisord_debug' ]
  script:
    - if [ $TARGET == "supervisord_debug" ]; then DOCKER_TAG="-supervisord-debug"; fi

    - FROM_IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-cli-debug
    - IMAGE_NAME=$FROM_IMAGE_NAME-debug

    - docker buildx build -f Dockerfile-supervisord --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_$TARGET --build-arg FROM=$FROM_IMAGE_NAME --build-arg PHP_VERSION=$PHP_VERSION --push --platform $CI_BUILDX_ARCHS .

.buildx_php:
  extends: .buildx
  parallel:
    matrix:
      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
          TARGET: ['php']
          PHP_TYPE: ['fpm', 'cli']
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine-$PHP_TYPE
    - docker buildx build --pull --cache-from type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache --cache-to type=registry,ref=$IMAGE_NAME:$PHP_VERSION-cache,mode=max --tag $IMAGE_NAME:$PHP_VERSION-LATEST --target=cors_$TARGET --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE --push --platform $CI_BUILDX_ARCHS .

build_php:
  extends: .buildx_php
  stage: build

build_debug:
  extends: .buildx_debug
  stage: build_debug
  needs:
    - build_php

build_supervisord:
  extends: .buildx_supervisord
  stage: build_supervisord
  needs:
    - build_php

build_supervisord_debug:
  extends: .buildx_supervisord_debug
  stage: build_supervisord_debug
  needs:
    - build_supervisord

build_nginx:
  stage: build_nginx
  parallel:
    matrix:
      - NGINX_VERSION: [ '1.21' ]
  script:
    - docker buildx build --pull -f Dockerfile-nginx --tag $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST --target=cors_nginx --build-arg NGINX_VERSION=$NGINX_VERSION --push --platform linux/arm64/v8 .


#build_nginx:
#  stage: build
#  image: docker:stable
#  only:
#    refs:
#      - tags
#  parallel:
#    matrix:
#        - NGINX_VERSION: [ '1.21' ]
#  before_script:
#    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
#  script:
#    - docker build . --tag $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG --target=cors_nginx --build-arg NGINX_VERSION=$NGINX_VERSION
#    - docker tag $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
#
#    - docker push $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-$TAG
#    - docker push $CI_REGISTRY_IMAGE/nginx:$NGINX_VERSION-LATEST
#  tags:
#    - cors
#
#build_alpine:
#  stage: build
#  image: docker:stable
#  only:
#    refs:
#      - tags
#  parallel:
#    matrix:
#      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
#          TARGET: ['php', 'debug']
#          PHP_TYPE: ['fpm', 'cli']
#      -   PHP_VERSION: [ '7.4', '8.0', '8.1' ]
#          TARGET: ['supervisord', 'supervisord_debug']
#          PHP_TYPE: ['cli']
#  variables:
#    TAG: $CI_COMMIT_REF_NAME
#  before_script:
#    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
#  script:
#    - DOCKER_TAG=-$PHP_TYPE;
#    - if [ $PHP_TYPE == "fpm" ]; then DOCKER_TAG=""; fi
#    - if [ $TARGET == "supervisord" ]; then DOCKER_TAG="-supervisord"; fi
#    - if [ $TARGET == "supervisord_debug" ]; then DOCKER_TAG="-supervisord-debug"; fi
#    - if [ $TARGET == "debug" ]; then DOCKER_TAG="-$PHP_TYPE-debug"; fi
#
#    - IMAGE_NAME=$CI_REGISTRY_IMAGE/php-alpine$DOCKER_TAG
#    - echo $IMAGE_NAME
#
#    - docker build . --tag $IMAGE_NAME:$PHP_VERSION-$TAG --target=cors_$TARGET --build-arg PHP_VERSION=$PHP_VERSION --build-arg PHP_TYPE=$PHP_TYPE
#    - docker tag $IMAGE_NAME:$PHP_VERSION-$TAG $CI_REGISTRY_IMAGE/php-alpine$DOCKER_TAG:$PHP_VERSION-LATEST
#
#    - docker push $IMAGE_NAME:$PHP_VERSION-$TAG
#    - docker push $IMAGE_NAME:$PHP_VERSION-LATEST
#  tags:
#    - cors
